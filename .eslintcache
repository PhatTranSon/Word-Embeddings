[{"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\index.js":"1","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\App.js":"2","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\home\\Home.js":"3","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\icons\\Glove.js":"4","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\icons\\Word2Vec.js":"5","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\GloVe\\glove.js":"6","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Word2Vec\\word2vec.js":"7","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\glove.js":"8","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\common\\TextField.js":"9","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\distance.js":"10","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\common\\plot.js":"11","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\neighbors\\neighbors.js":"12","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\neighbors\\row.js":"13","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\word2vec.js":"14"},{"size":220,"mtime":1609230878160,"results":"15","hashOfConfig":"16"},{"size":944,"mtime":1609253827156,"results":"17","hashOfConfig":"16"},{"size":3116,"mtime":1609732309610,"results":"18","hashOfConfig":"16"},{"size":854,"mtime":1609233502232,"results":"19","hashOfConfig":"16"},{"size":2842,"mtime":1609233690382,"results":"20","hashOfConfig":"16"},{"size":3413,"mtime":1609595235884,"results":"21","hashOfConfig":"16"},{"size":3432,"mtime":1609836603953,"results":"22","hashOfConfig":"16"},{"size":8339,"mtime":1609837787569,"results":"23","hashOfConfig":"16"},{"size":441,"mtime":1609599205976,"results":"24","hashOfConfig":"16"},{"size":1338,"mtime":1609733429035,"results":"25","hashOfConfig":"16"},{"size":164,"mtime":1609732537545,"results":"26","hashOfConfig":"16"},{"size":987,"mtime":1609771735074,"results":"27","hashOfConfig":"16"},{"size":1086,"mtime":1609735991465,"results":"28","hashOfConfig":"16"},{"size":8354,"mtime":1609836812650,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"10hw72q",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\index.js",[],["63","64"],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\App.js",["65"],"import React from 'react';\r\nimport 'bulma';\r\nimport { Link, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/home/Home';\r\nimport Glove from './pages/algorithms/GloVe/glove';\r\nimport Word2Vec from './pages/algorithms/Word2Vec/word2vec';\r\n\r\nclass App extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"app\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Home/>\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/glove\">\r\n                            <Glove/>\r\n                        </Route>\r\n\r\n                        <Route exact path=\"/word2vec\">\r\n                            <Word2Vec/>\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\home\\Home.js",["66"],"import React from 'react';\r\nimport \"bulma\";\r\nimport \"./Home.css\";\r\nimport GloveIcon from '../icons/Glove';\r\nimport Word2VecIcon from '../icons/Word2Vec';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hovering: null\r\n        }\r\n\r\n        this.hover = this.hover.bind(this);\r\n        this.nohover = this.nohover.bind(this);\r\n    }\r\n\r\n    hover(id) {\r\n        if (id === 'left') {\r\n            this.setState({\r\n                hovering: 'left'\r\n            });\r\n        } else if (id === 'right') {\r\n            this.setState({\r\n                hovering: 'right'\r\n            });\r\n        }\r\n    }\r\n\r\n    nohover() {\r\n        this.setState({\r\n            hovering: null\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"columns panel\" id=\"first-panel\">\r\n                    <div className=\"column center-items\" id=\"first-left\">\r\n                        <h1>Word embedding.</h1>\r\n                    </div>\r\n                    <div className=\"column center-items\" id=\"first-right\">\r\n                        <div>\r\n                            <p id=\"quote\">\r\n                                “Sparse vectors in which each entry is a measure of the association between the word and a particular context.”\r\n                            </p>\r\n\r\n                            <p id=\"author\">\r\n                                - Omer Levy\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"columns panel\" id=\"second-panel\">\r\n                    <div className=\"column\" id=\"second-left\" onMouseEnter={() => this.hover('left')} onMouseLeave={() => this.nohover()}>\r\n                        <div>\r\n                            <h1>GloVe</h1>\r\n                            <div className=\"icon-holder\">\r\n                                <GloveIcon color={this.state.hovering === \"left\" ? \"white\" : \"black\"} style={{'transform': 'scale(0.75)'}}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n\r\n                    <div className=\"column\" id=\"second-right\" onMouseEnter={() => this.hover('right')} onMouseLeave={() => this.nohover()}>\r\n                        <div>\r\n                            <h1>Word2Vec</h1>\r\n                            <div className=\"icon-holder\">\r\n                                <Word2VecIcon color={this.state.hovering === \"right\" ? \"white\" : \"black\"} style={{'transform': 'scale(0.75)', 'color': 'green'}}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <footer className=\"footer\">\r\n                    <div className=\"content has-text-centered\">\r\n                        Created by Tran Son Phat at RMIT university\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\icons\\Glove.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\icons\\Word2Vec.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\GloVe\\glove.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Word2Vec\\word2vec.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\glove.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\common\\TextField.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\distance.js",["67"]," export default function nearestNeighbors(full_embeddings, word, neighbors=11) {\r\n     /*  \r\n        full_embeddings is a diction containing word: embedding pairs\r\n        word is simply a word in the dictionary\r\n    */\r\n\r\n    return new Promise((resolve, reject) => {\r\n        if (!(word in full_embeddings)) {\r\n            reject(new Error(\"The word does not exists\"));\r\n        } else {\r\n            //Get the word embbeding\r\n            const word_embedding = full_embeddings[word];\r\n    \r\n            //Calculate the distance between the embedding to all other embedding\r\n            const distances = Object.keys(full_embeddings).map(a_word => {\r\n                return [a_word, euclidean_distance(word_embedding, full_embeddings[a_word])];\r\n            });\r\n    \r\n            //Sort the distances array in descending order\r\n            distances.sort((first, second) => {\r\n                return first[1] - second[1];\r\n            });\r\n    \r\n            //Get the first 10 neighbors\r\n            resolve(distances.slice(1, neighbors));\r\n        }\r\n    });\r\n}\r\n\r\nfunction euclidean_distance(x1, x2) {\r\n    let sum = 0;\r\n\r\n    for (let i = 0; i !== x1.length; ++i) {\r\n        sum += Math.pow(x1[i] - x2[i], 2);\r\n    }\r\n\r\n    return Math.sqrt(sum);\r\n}\r\n\r\nfunction cosin_distance(x1, x2) {\r\n    /*\r\n        TO BE IMPLEMENTED\r\n    */\r\n}","C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\common\\plot.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\neighbors\\neighbors.js",[],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\neighbors\\row.js",[],["68","69"],"C:\\Users\\ryanz\\Codes\\ML\\NLP\\word-embeddings\\src\\pages\\algorithms\\Graph\\word2vec.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":14},{"ruleId":"74","severity":1,"message":"78","line":40,"column":10,"nodeType":"76","messageId":"77","endLine":40,"endColumn":24},{"ruleId":"70","replacedBy":"79"},{"ruleId":"72","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'cosin_distance' is defined but never used.",["81"],["82"],"no-global-assign","no-unsafe-negation"]